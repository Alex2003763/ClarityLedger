
{
  "appName": "ClarityCoin",
  "footer": "© {year} ClarityCoin. Manage your finances with clarity.",
  "navbar": {
    "dashboard": "Dashboard",
    "settings": "Settings"
  },
  "settingsPage": {
    "title": "Settings",
    "apiSettingsTitle": "API Settings",
    "apiSettingsDescription": "Configure your OpenRouter API Key and preferred model for AI-powered financial tips. Get an API key from OpenRouter.ai. Settings are stored locally in your browser.",
    "openRouterLink": "OpenRouter.ai",
    "apiKeyLabel": "OpenRouter API Key",
    "apiKeyPlaceholder": "Enter your OpenRouter API Key",
    "apiKeyHelp": "Leave blank and save to remove the key.",
    "modelNameLabel": "AI Model Name",
    "modelNamePlaceholder": "e.g., deepseek/deepseek-chat",
    "modelNameHelp": "Enter the full model name from OpenRouter (e.g., `anthropic/claude-3-haiku-20240307`). If left empty, \"{defaultModel}\" will be used by default for AI tips.",
    "saveButton": "Save Settings",
    "savingButton": "Saving...",
    "settingsSavedButton": "Settings Saved!",
    "successMessage": "Settings saved successfully!",
    "apiKeyRemovedMessage": "API Key removed. Model configuration updated.",
    "failureMessage": "Failed to save settings. Please try again.",
    "settingsUsageInfo": "ClarityCoin uses your OpenRouter key and specified model to provide personalized financial tips.",
    "uiSettingsTitle": "UI Settings",
    "languageLabel": "Language",
    "darkModeLabel": "Dark Mode",
    "currencySettingLabel": "Currency",
    "currencyChangedMessage": "Currency changed to {currency}.",
    "english": "English",
    "traditionalChinese": "繁體中文",
    "switchToLightMode": "Switch to Light Mode",
    "switchToDarkMode": "Switch to Dark Mode",
    "dataManagementTitle": "Data Management",
    "exportDataButton": "Export Data",
    "importDataButton": "Import Data",
    "importConfirmTitle": "Confirm Import",
    "importConfirmMessage": "Are you sure you want to import data? This will replace ALL current transactions. This action cannot be undone.",
    "importConfirmButton": "Confirm Import",
    "importCancelButton": "Cancel",
    "exportSuccessMessage": "Data exported successfully as {filename}!",
    "exportErrorMessage": "Failed to export data. Please try again.",
    "importSuccessMessage": "Data imported successfully!",
    "importSuccessInfoNavigate": "Navigate to the Dashboard to see the changes.",
    "importProcessingMessage": "Processing import...",
    "importErrorMessageFile": "Failed to read file or invalid file type. Please select a valid JSON file.",
    "importErrorMessageFormat": "Invalid JSON format. Please check the file content.",
    "importErrorMessageValidation": "Invalid data structure in JSON file. Ensure it's an array of transactions with correct fields.",
    "customCategories": {
      "title": "Category Management",
      "description": "Manage your custom income and expense categories. Default categories cannot be deleted.",
      "incomeTitle": "Income Categories",
      "expenseTitle": "Expense Categories",
      "defaultCategories": "Default Categories:",
      "yourCustomCategories": "Your Custom Categories:",
      "noCustomYet": "No custom categories added yet.",
      "addPlaceholder": "Enter new category name",
      "addButton": "Add",
      "errorEmptyName": "Category name cannot be empty.",
      "errorExists": "Category '{categoryName}' already exists.",
      "errorIsDefault": "Category '{categoryName}' is a default category and cannot be added as custom.",
      "addSuccess": "Category '{categoryName}' added successfully.",
      "deleteSuccess": "Category '{categoryName}' deleted.",
      "errorCannotDeleteDefault": "Default categories cannot be deleted here.",
      "confirmDeleteInUse": "Category '{categoryName}' is currently in use by some transactions. Deleting it will remove it from the selection list. Are you sure?"
    }
  },
  "dashboard": {
    "loading": "Loading dashboard data...",
    "recentActivity": "Recent Activity",
    "addTransactionButton": "Add Transaction",
    "expenseBreakdownTitle": "Expense Breakdown",
    "noExpensesForChart": "No expenses recorded yet to show a chart.",
    "noTransactions": "No transactions yet. Add one to get started!",
    "filtersTitle": "Filters",
    "showFiltersButton": "Show Filters",
    "hideFiltersButton": "Hide Filters",
    "filterKeywordLabel": "Keyword Search",
    "filterKeywordPlaceholder": "Description or Category...",
    "filterTypeLabel": "Transaction Type",
    "filterTypeAll": "All Types",
    "filterTypeIncome": "Income",
    "filterTypeExpense": "Expense",
    "filterStartDateLabel": "Start Date",
    "filterEndDateLabel": "End Date",
    "filterMinAmountLabel": "Min Amount",
    "filterMinAmountPlaceholder": "e.g., 0",
    "filterMaxAmountLabel": "Max Amount",
    "filterMaxAmountPlaceholder": "e.g., 1000",
    "filterTagLabel": "Tag Search",
    "filterTagPlaceholder": "e.g., work, important",
    "applyFiltersButton": "Apply Filters",
    "resetFiltersButton": "Reset Filters",
    "budgets": {
      "title": "Monthly Budgets",
      "addBudgetButton": "Add Budget",
      "editBudgetButton": "Edit Budget",
      "noBudgetsSet": "No budgets set for this month. Click 'Add Budget' to create one.",
      "spent": "Spent",
      "remaining": "Remaining:",
      "overspentBy": "Overspent by:",
      "editButtonAriaLabel": "Edit budget for {category}",
      "deleteButtonAriaLabel": "Delete budget for {category}",
      "addBudgetModalTitle": "Add New Budget",
      "editBudgetModalTitle": "Edit Budget",
      "previousMonth": "Previous Month",
      "nextMonth": "Next Month"
    }
  },
  "transactionForm": {
    "modalTitle": "Add New Transaction",
    "descriptionLabel": "Description",
    "descriptionPlaceholder": "e.g., Groceries, Salary",
    "amountLabel": "Amount",
    "amountPlaceholder": "0.00",
    "typeLabel": "Type",
    "expenseButton": "Expense",
    "incomeButton": "Income",
    "categoryLabel": "Category",
    "selectCategoryPlaceholder": "Select a category...",
    "tagsLabel": "Tags (comma-separated)",
    "tagsPlaceholder": "e.g., work, personal, urgent",
    "dateLabel": "Date",
    "submitAddButton": "Add Transaction",
    "submitUpdateButton": "Update Transaction",
    "errors": {
      "descriptionRequired": "Description is required.",
      "amountRequired": "Amount is required.",
      "amountPositive": "Amount must be a positive number.",
      "dateRequired": "Date is required.",
      "categoryRequired": "Category is required."
    }
  },
  "budgetForm": {
    "categoryLabel": "Category",
    "selectCategoryPlaceholder": "Select an expense category...",
    "targetAmountLabel": "Target Amount",
    "monthYearLabel": "Month (YYYY-MM)",
    "editInfo": "Category and month cannot be changed when editing.",
    "submitAddButton": "Add Budget",
    "submitUpdateButton": "Update Budget",
    "errors": {
        "categoryRequired": "Category is required.",
        "amountRequired": "Target amount is required.",
        "amountPositive": "Target amount must be a positive number.",
        "monthYearInvalid": "Month format must be YYYY-MM (e.g., 2023-10).",
        "categoryBudgeted": "A budget for '{category}' already exists for this month."
    }
  },
  "transactionList": {
    "noTransactions": "No transactions yet. Add one to get started!",
    "noFilteredTransactions": "No transactions match your current filters."
  },
  "summaryDisplay": {
    "totalIncome": "Total Income",
    "totalExpenses": "Total Expenses",
    "currentBalance": "Current Balance"
  },
  "categoryPieChart": {
    "noData": "No expense data to display chart."
  },
  "aiFinancialTip": {
    "title": "AI Financial Tip",
    "getNewTipButton": "Get New Tip",
    "gettingTipButton": "Getting Tip...",
    "initialMessage": "Click \"Get New Tip\" for personalized advice!",
    "infoText": "AI-generated tips are for informational purposes only. Powered by OpenRouter.",
    "errorApiKeyNotSet": "Could not fetch a tip: OpenRouter API Key is not set. Please configure it in the Settings page.",
    "errorInvalidApiKey": "Could not fetch a tip: Invalid OpenRouter API Key. Please check it in the Settings page.",
    "errorRateLimit": "Could not fetch a tip: Rate limit exceeded or quota finished for OpenRouter (model: {model}). Please check your OpenRouter account.",
    "errorRequestFailed": "OpenRouter API request failed (model: {model}): {status} - {message}",
    "errorDefault": "Sorry, I couldn't fetch a financial tip right now. {message}",
    "errorUnexpectedResponse": "Sorry, I received an unexpected response structure from the AI service while fetching a tip.",
    "errorNoChoices": "Sorry, the AI model returned no choices. This might be due to content filters, model settings, or an issue with the model. Please try a different model or prompt.",
    "errorEmptyMessage": "Sorry, the AI model returned an empty message. Please try again or a different model.",
    "errorApiError": "Sorry, an API error occurred: {message} (model: {model})",
    "errorNetwork": "Error connecting to OpenRouter (model: {model}): {message}",
    "errorGenericNetwork": "Sorry, I couldn't fetch a financial tip right now due to a network or client-side issue. Please try again later."
  },
  "categories": {
    "Food": "Food",
    "Groceries": "Groceries",
    "Transport": "Transport",
    "Utilities": "Utilities",
    "Housing": "Housing",
    "Entertainment": "Entertainment",
    "Health": "Health",
    "Shopping": "Shopping",
    "Education": "Education",
    "Travel": "Travel",
    "Other": "Other",
    "Salary": "Salary",
    "Bonus": "Bonus",
    "Investment": "Investment",
    "Gift": "Gift"
  },
  "currencies": {
    "USD": "US Dollar",
    "EUR": "Euro",
    "JPY": "Japanese Yen",
    "GBP": "British Pound",
    "AUD": "Australian Dollar",
    "CAD": "Canadian Dollar",
    "CNY": "Chinese Yuan",
    "TWD": "New Taiwan Dollar",
    "HKD": "Hong Kong Dollar"
  }
}
